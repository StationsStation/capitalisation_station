# Auto-generated by tool

"""Models for the markets protocol performatives to facilitate hypothesis strategy generation."""

from typing import Optional

from pydantic import BaseModel

from packages.eightballer.protocols.markets.custom_types import (
    Market,
    Markets,
    ErrorCode,
)


# ruff: noqa: UP007
# UP007    - Use X | Y for type annotations  # NOTE: important edge case pydantic-hypothesis interaction!


class GetAllMarkets(BaseModel):
    """Model for the `GET_ALL_MARKETS` initial speech act performative."""

    exchange_id: str
    currency: Optional[str]


class GetMarket(BaseModel):
    """Model for the `GET_MARKET` initial speech act performative."""

    id: str
    exchange_id: str


class AllMarkets(BaseModel):
    """Model for the `ALL_MARKETS` initial speech act performative."""

    markets: Markets


class Market(BaseModel):
    """Model for the `MARKET` initial speech act performative."""

    market: Market


class Error(BaseModel):
    """Model for the `ERROR` initial speech act performative."""

    error_code: ErrorCode
    error_msg: str
    error_data: dict[str, bytes]


GetAllMarkets.model_rebuild()
GetMarket.model_rebuild()
AllMarkets.model_rebuild()
Market.model_rebuild()
Error.model_rebuild()
