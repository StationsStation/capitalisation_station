# Auto-generated by tool

"""Models for the default protocol performatives to facilitate hypothesis strategy generation."""

from pydantic import BaseModel

from packages.eightballer.protocols.default.custom_types import (
    ErrorCode,
)


# ruff: noqa: UP007
# UP007    - Use X | Y for type annotations  # NOTE: important edge case pydantic-hypothesis interaction!


class Bytes(BaseModel):
    """Model for the `BYTES` initial speech act performative."""

    content: bytes


class Error(BaseModel):
    """Model for the `ERROR` initial speech act performative."""

    error_code: ErrorCode
    error_msg: str
    error_data: dict[str, bytes]


class End(BaseModel):
    """Model for the `END` initial speech act performative."""


Bytes.model_rebuild()
Error.model_rebuild()
End.model_rebuild()
