# Auto-generated by tool

"""Models for the spot_asset protocol performatives to facilitate hypothesis strategy generation."""

from typing import Optional

from pydantic import BaseModel

from packages.eightballer.protocols.spot_asset.custom_types import (
    Decimal,
    ErrorCode,
)


# ruff: noqa: UP007
# UP007    - Use X | Y for type annotations  # NOTE: important edge case pydantic-hypothesis interaction!


class GetSpotAsset(BaseModel):
    """Model for the `GET_SPOT_ASSET` initial speech act performative."""

    name: str
    exchange_id: str


class SpotAsset(BaseModel):
    """Model for the `SPOT_ASSET` initial speech act performative."""

    name: str
    total: Decimal
    free: Decimal
    available_without_borrow: Decimal
    usd_value: Optional[Decimal]
    decimal: Optional[Decimal]


class GetSpotAssets(BaseModel):
    """Model for the `GET_SPOT_ASSETS` initial speech act performative."""

    exchange_id: str


class Error(BaseModel):
    """Model for the `ERROR` initial speech act performative."""

    error_code: ErrorCode
    error_msg: str


class End(BaseModel):
    """Model for the `END` initial speech act performative."""


GetSpotAsset.model_rebuild()
SpotAsset.model_rebuild()
GetSpotAssets.model_rebuild()
Error.model_rebuild()
End.model_rebuild()
