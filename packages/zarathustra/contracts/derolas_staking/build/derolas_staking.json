{
  "address": "0x35CAf83118d58504C179b50D538a095ac08Ebc8f",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minimumDonation",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_balancerRouter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_poolId",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_assetsInPool",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_wethIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_olasIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_incentiveTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "AddressEmptyCode",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddressInsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedInnerCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SafeERC20FailedOperation",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "epochRewards",
          "type": "uint256"
        }
      ],
      "name": "AuctionEnded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "donatorAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DonationReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EthDonatedToBalancer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "donatorAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RewardsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "UnclaimedRewardsDonated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "assetsInPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "balancerRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimAmount",
          "type": "uint256"
        }
      ],
      "name": "canPayTicket",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canPlayGame",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "claimable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endEpoch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "epochDonated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "epochLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "epochRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "epochToClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "epochToDonations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "epochToEndBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "epochToTotalDonated",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "donation",
          "type": "uint256"
        }
      ],
      "name": "estimateTicketPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "forceAdvanceEpoch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBlocksRemaining",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getCurrentShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEpochLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEpochRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getGameState",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_currentEpoch",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_epochLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_epochEndBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minimumDonation",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_blocksRemaining",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_epochRewards",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalDonated",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_incentiveBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_userCurrentDonation",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_userCurrentShare",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_userClaimable",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_hasClaimed",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_canPlayGame",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalDonated",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalUnclaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incentiveBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incentiveTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxDonatorsPerEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumDonation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "olasIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permit2",
      "outputs": [
        {
          "internalType": "contract IPermit2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolId",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "topUpIncentiveBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDonated",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wethIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xd032e641a68f2a071da973b0c707169d634540ff30348ad61151d8d308504c79",
  "receipt": {
    "to": null,
    "from": "0x5D407A012071CB234CA1A965be9E47a3fCA5d704",
    "contractAddress": "0x35CAf83118d58504C179b50D538a095ac08Ebc8f",
    "transactionIndex": 125,
    "gasUsed": "2001965",
    "logsBloom": "0x
    "blockHash": "0x7ead81b3db7a6bd64acaf36dd614bf8b6d3bb6cc0e709c19e61621986f7d6b8e",
    "transactionHash": "0xd032e641a68f2a071da973b0c707169d634540ff30348ad61151d8d308504c79",
    "logs": [
      {
        "transactionIndex": 125,
        "blockNumber": 31682991,
        "transactionHash": "0xd032e641a68f2a071da973b0c707169d634540ff30348ad61151d8d308504c79",
        "address": "0x35CAf83118d58504C179b50D538a095ac08Ebc8f",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005d407a012071cb234ca1a965be9e47a3fca5d704"
        ],
        "data": "0x",
        "logIndex": 431,
        "blockHash": "0x7ead81b3db7a6bd64acaf36dd614bf8b6d3bb6cc0e709c19e61621986f7d6b8e"
      }
    ],
    "blockNumber": 31682991,
    "cumulativeGasUsed": "33125586",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5D407A012071CB234CA1A965be9E47a3fCA5d704",
    10000000000000,
    "0x3f170631ed9821ca51a59d996ab095162438dc10",
    "0x7b4c560f33a71a9f7a500af3c4c65b46fbbafdb7",
    8,
    1,
    3,
    "0x54330d28ca3357f294334bdc454a032e7f353416"
  ],
  "numDeployments": 3,
  "solcInputHash": "842d1ee649da66bb8083e389f94a16de",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minimumDonation\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_balancerRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_poolId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_assetsInPool\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_wethIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_olasIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_incentiveTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epochRewards\",\"type\":\"uint256\"}],\"name\":\"AuctionEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DonationReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EthDonatedToBalancer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnclaimedRewardsDonated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"assetsInPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balancerRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"}],\"name\":\"canPayTicket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canPlayGame\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"claimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endEpoch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"epochDonated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epochLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epochRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"epochToClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"epochToDonations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"epochToEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"epochToTotalDonated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"donation\",\"type\":\"uint256\"}],\"name\":\"estimateTicketPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forceAdvanceEpoch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlocksRemaining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getCurrentShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEpochLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEpochRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getGameState\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_currentEpoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_epochLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_epochEndBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minimumDonation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_blocksRemaining\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_epochRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalDonated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_incentiveBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userCurrentDonation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userCurrentShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userClaimable\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_hasClaimed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_canPlayGame\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalDonated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalUnclaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incentiveBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incentiveTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxDonatorsPerEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumDonation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"olasIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permit2\",\"outputs\":[{\"internalType\":\"contract IPermit2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"topUpIncentiveBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDonated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wethIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"DerolasStaking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n *\\n * ==== Security Considerations\\n *\\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\\n * generally recommended is:\\n *\\n * ```solidity\\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\\n *     doThing(..., value);\\n * }\\n *\\n * function doThing(..., uint256 value) public {\\n *     token.safeTransferFrom(msg.sender, address(this), value);\\n *     ...\\n * }\\n * ```\\n *\\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\\n * {SafeERC20-safeTransferFrom}).\\n *\\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\\n * contracts should have entry points that don't rely on permit.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     *\\n     * CAUTION: See Security Considerations above.\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC20Permit} from \\\"../extensions/IERC20Permit.sol\\\";\\nimport {Address} from \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev An operation with an ERC20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data);\\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\\n    }\\n}\\n\",\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/Staking.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IBalancerRouter {\\n    function donate(\\n        address pool,\\n        uint256[] memory amountsIn,\\n        bool wethIsEth,\\n        bytes memory userData\\n    ) external payable;\\n    // get permit2\\n    function getPermit2() external view returns (address);\\n}\\n\\ninterface IPermit2 {\\n    function approve(address token, address spender, uint160 amount, uint48 expiration) external;\\n}\\n\\n\\ncontract DerolasStaking is ReentrancyGuard, Ownable {\\n    using SafeERC20 for IERC20;\\n\\n\\n    IPermit2 public immutable permit2;\\n\\n    address public immutable balancerRouter;\\n    address public immutable poolId;\\n    uint256 public immutable assetsInPool;\\n    uint256 public immutable wethIndex;\\n    uint256 public immutable olasIndex;\\n    address public immutable incentiveTokenAddress;\\n\\n    uint256 public immutable minimumDonation;\\n    uint256 public immutable epochRewards = 1e18; // 1 OLAS\\n    uint256 public immutable epochLength = 90;\\n\\n    uint256 public totalDonated;\\n    uint256 public totalClaimed;\\n    uint256 public currentEpoch = 0;\\n\\n    uint256 public constant maxDonatorsPerEpoch = 88;\\n\\n    mapping(uint256 => mapping(address => uint256)) public epochToDonations;\\n    mapping(uint256 => mapping(address => uint256)) public epochToClaimed;\\n    mapping(uint256 => uint256) public epochToTotalDonated;\\n    mapping(uint256 => uint256) public epochToEndBlock;\\n    mapping(uint256 => bool) public epochDonated;\\n\\n    event DonationReceived(address indexed donatorAddress, uint256 indexed amount);\\n    event AuctionEnded(uint256 indexed epochRewards);\\n    event UnclaimedRewardsDonated(uint256 indexed amount);\\n    event RewardsClaimed(address indexed donatorAddress, uint256 indexed amount);\\n    event EthDonatedToBalancer(uint256 indexed amount);\\n\\n\\n    receive() external payable {}\\n\\n    function incentiveBalance() public view returns (uint256) {\\n        return IERC20(incentiveTokenAddress).balanceOf(address(this));\\n    }\\n\\n    function canPlayGame() public view returns (bool) {\\n        return incentiveBalance() >= epochRewards;\\n    }\\n\\n    function canPayTicket(uint256 claimAmount) public view returns (bool) {\\n        return incentiveBalance() >= claimAmount;\\n    }\\n\\n    modifier onlyOncePerEpoch() {\\n        require(block.number >= epochToEndBlock[currentEpoch], \\\"Epoch not over\\\");\\n        _;\\n    }\\n\\n    modifier gameHasStarted() {\\n        require(currentEpoch > 0, \\\"Game has not started yet\\\");\\n        _;\\n    }\\n\\n\\n    function endEpoch() external onlyOncePerEpoch nonReentrant {\\n        require(currentEpoch > 0, \\\"No epoch to end\\\");\\n        require(block.number > epochToEndBlock[currentEpoch], \\\"Epoch not over\\\");\\n        donateUnclaimedRewards();\\n        donateEthContribution();\\n        storeGame();\\n        advanceEpoch();\\n        emit AuctionEnded(epochRewards);\\n    }\\n\\n\\n    function storeGame() internal {\\n        epochToTotalDonated[currentEpoch] = totalDonated;\\n    }\\n\\n    function advanceEpoch() internal {\\n        currentEpoch += 1;\\n        totalDonated = 0;\\n        totalClaimed = 0;\\n        epochToEndBlock[currentEpoch] = block.number + epochLength;\\n    }\\n\\n    function donateUnclaimedRewards() internal {\\n        if (currentEpoch == 0) {\\n            return;\\n        }\\n        uint256 epoch = currentEpoch - 1;\\n        uint256 totalEpochDonations = epochToTotalDonated[epoch];\\n        if (totalEpochDonations == 0) {\\n            epochDonated[epoch] = true;\\n            return;\\n        }\\n\\n        uint256 unclaimedAmount = epochRewards - totalClaimed;\\n        if (unclaimedAmount == 0) {\\n            epochDonated[epoch] = true;\\n            return;\\n        }\\n        require(IERC20(incentiveTokenAddress).balanceOf(address(this)) >= unclaimedAmount, \\\"Not enough incentive balance to donate\\\");\\n\\n        uint256[] memory amountsIn = new uint256[](assetsInPool);\\n        amountsIn[olasIndex] = unclaimedAmount;\\n\\n        IERC20 token = IERC20(incentiveTokenAddress);\\n        token.approve(address(permit2), 0);\\n        token.approve(address(permit2), unclaimedAmount);\\n        permit2.approve(incentiveTokenAddress, balancerRouter, uint160(unclaimedAmount), uint48(block.timestamp + 1 days));\\n        IBalancerRouter(balancerRouter).donate(poolId, amountsIn, true, \\\"\\\");\\n        epochDonated[epoch] = true;\\n        emit UnclaimedRewardsDonated(unclaimedAmount);\\n    }\\n    function donateEthContribution() internal {\\n        // require(IERC20(incentiveTokenAddress).balanceOf(address(this)) >= unclaimedAmount, \\\"Not enough incentive balance to donate\\\");\\n        // we instead check the whole balance of the contract\\n        uint256 contributionAmount = address(this).balance;\\n        if (contributionAmount == 0) {\\n            return;\\n        }\\n        uint256[] memory amountsIn = new uint256[](assetsInPool);\\n        amountsIn[wethIndex] = contributionAmount;\\n        IBalancerRouter(balancerRouter).donate{value: contributionAmount}(poolId, amountsIn, true, \\\"\\\");\\n        emit EthDonatedToBalancer(contributionAmount);\\n    }\\n\\n\\n    function claim() external nonReentrant {\\n        require(currentEpoch > 0, \\\"No epoch to claim from\\\");\\n\\n        uint256 claimEpoch = currentEpoch - 1;\\n        require(epochToEndBlock[claimEpoch] > 0, \\\"Epoch not ended yet\\\");\\n        require(block.number <= epochToEndBlock[claimEpoch] + (2 * epochLength), \\\"Claim window closed\\\");\\n        require(epochToClaimed[claimEpoch][msg.sender] == 0, \\\"Already claimed\\\");\\n\\n        uint256 donation = epochToDonations[claimEpoch][msg.sender];\\n        require(donation > 0, \\\"No donation found\\\");\\n\\n        uint256 totalEpochDonations = epochToTotalDonated[claimEpoch];\\n        require(totalEpochDonations > 0, \\\"No donations this epoch\\\");\\n\\n        uint256 amount = (donation * epochRewards) / totalEpochDonations;\\n        require(amount > 0, \\\"Nothing to claim\\\");\\n        require(canPayTicket(amount), \\\"Not enough OLAS rewards\\\");\\n\\n        epochToClaimed[claimEpoch][msg.sender] = amount;\\n\\n        IERC20(incentiveTokenAddress).transfer(msg.sender, amount);\\n\\n        totalClaimed += amount;\\n        emit RewardsClaimed(msg.sender, amount);\\n    }\\n\\n    function claimable(address _address) external view returns (uint256) {\\n        if (currentEpoch == 0) {\\n            return 0;\\n        }\\n        uint256 claimEpoch = currentEpoch - 1;\\n        if (epochToClaimed[claimEpoch][_address] > 0) {\\n            return 0;\\n        }\\n\\n        uint256 donation = epochToDonations[claimEpoch][_address];\\n        uint256 totalEpochDonations = epochToTotalDonated[claimEpoch];\\n\\n        if (donation == 0 || totalEpochDonations == 0) {\\n            return 0;\\n        }\\n\\n        return (donation * epochRewards) / totalEpochDonations;\\n    }\\n\\n    function estimateTicketPercentage(uint256 donation) public view returns (uint256) {\\n        require(donation >= minimumDonation, \\\"Minimum donation not met\\\");\\n        require(canPlayGame(), \\\"Not enough OLAS rewards to play the game\\\");\\n\\n        if (totalDonated == 0) {\\n            return 1e18; // full share\\n        }\\n\\n        return (donation * 1e18) / totalDonated;\\n    }\\n\\n    function donate() external payable nonReentrant gameHasStarted {\\n        require(msg.value >= minimumDonation, \\\"Donation amount is less than the minimum donation\\\");\\n        require(canPlayGame(), \\\"Not enough OLAS rewards to play the game\\\");\\n        require(epochToDonations[currentEpoch][msg.sender] == 0, \\\"Already donated this epoch\\\");\\n        require(epochToTotalDonated[currentEpoch] < maxDonatorsPerEpoch, \\\"Max donators reached\\\");\\n\\n        totalDonated += msg.value;\\n        epochToDonations[currentEpoch][msg.sender] = msg.value;\\n\\n        emit DonationReceived(msg.sender, msg.value);\\n    }\\n\\n    function topUpIncentiveBalance(uint256 amount) external {\\n        require(amount > 0, \\\"Amount must be greater than 0\\\");\\n        require(IERC20(incentiveTokenAddress).balanceOf(msg.sender) >= amount, \\\"Not enough OLAS rewards\\\");\\n        require(IERC20(incentiveTokenAddress).allowance(msg.sender, address(this)) >= amount, \\\"Not enough allowance\\\");\\n\\n        IERC20(incentiveTokenAddress).safeTransferFrom(msg.sender, address(this), amount);\\n    }\\n\\n    function getCurrentShare(address _address) public view returns (uint256) {\\n        uint256 donation = epochToDonations[currentEpoch][_address];\\n        if (donation == 0) {\\n            return 0;\\n        }\\n        return (donation * 1e18) / totalDonated;\\n    }\\n\\n    function getBlocksRemaining() public view returns (uint256) {\\n        if (currentEpoch == 0) {\\n            return 0;\\n        }\\n        if (block.number >= epochToEndBlock[currentEpoch]) {\\n            return 0;\\n        }\\n        uint256 blocksRemaining = epochToEndBlock[currentEpoch] - block.number;\\n        return blocksRemaining;\\n    }\\n\\n\\n    function getTotalDonated() public view returns (uint256) {\\n        return totalDonated;\\n    }\\n\\n    function getEpochRewards() public view returns (uint256) {\\n        return epochRewards;\\n    }\\n\\n    function getCurrentEpoch() public view returns (uint256) {\\n        return currentEpoch;\\n    }\\n\\n    function getTotalClaimed() public view returns (uint256) {\\n        return totalClaimed;\\n    }\\n\\n    function getEpochLength() public view returns (uint256) {\\n        return epochLength;\\n    }\\n    function getTotalUnclaimed() public view returns (uint256) {\\n        if (currentEpoch == 0) {\\n            return 0;\\n        }\\n        uint256 claimEpoch = currentEpoch - 1;\\n        if (epochDonated[claimEpoch]) {\\n            return 0;\\n        }\\n        uint256 totalEpochDonations = epochToTotalDonated[claimEpoch];\\n        if (totalEpochDonations == 0) {\\n            return 0;\\n        }\\n        return epochRewards - totalClaimed;\\n    }\\n\\n    function forceAdvanceEpoch() external onlyOwner {\\n        storeGame();\\n        advanceEpoch();\\n        emit AuctionEnded(0);\\n    }\\n\\n    function getGameState(address user) external view returns (\\n        uint256 _currentEpoch,\\n        uint256 _epochLength,\\n        uint256 _epochEndBlock,\\n        uint256 _minimumDonation,\\n        uint256 _blocksRemaining,\\n        uint256 _epochRewards,\\n        uint256 _totalDonated,\\n        uint256 _totalClaimed,\\n        uint256 _incentiveBalance,\\n        uint256 _userCurrentDonation,\\n        uint256 _userCurrentShare,\\n        uint256 _userClaimable,\\n        bool _hasClaimed,\\n        bool _canPlayGame\\n    ) {\\n        _currentEpoch = currentEpoch;\\n        _epochLength = epochLength;\\n        _epochEndBlock = epochToEndBlock[currentEpoch];\\n        _minimumDonation = minimumDonation;\\n        _blocksRemaining = block.number >= _epochEndBlock ? 0 : (_epochEndBlock - block.number);\\n        _epochRewards = epochRewards;\\n        _totalDonated = totalDonated;\\n        _totalClaimed = totalClaimed;\\n        _incentiveBalance = IERC20(incentiveTokenAddress).balanceOf(address(this));\\n        _userCurrentDonation = epochToDonations[currentEpoch][user];\\n        _userCurrentShare = totalDonated == 0 ? 0 : (_userCurrentDonation * 1e18) / totalDonated;\\n    \\n        if (currentEpoch == 0) {\\n            _userClaimable = 0;\\n            _hasClaimed = false;\\n        } else {\\n            uint256 claimEpoch = currentEpoch - 1;\\n            _hasClaimed = epochToClaimed[claimEpoch][user] > 0;\\n            uint256 donation = epochToDonations[claimEpoch][user];\\n            uint256 totalEpochDonations = epochToTotalDonated[claimEpoch];\\n            if (donation == 0 || totalEpochDonations == 0 || _hasClaimed) {\\n                _userClaimable = 0;\\n            } else {\\n                _userClaimable = (donation * epochRewards) / totalEpochDonations;\\n            }\\n        }\\n        _canPlayGame = canPlayGame();\\n    }\\n\\n\\n    constructor(\\n        address _owner,\\n        uint256 _minimumDonation,\\n        address _balancerRouter,\\n        address _poolId,\\n        uint256 _assetsInPool,\\n        uint256 _wethIndex,\\n        uint256 _olasIndex,\\n        address _incentiveTokenAddress\\n    ) Ownable(_owner) {\\n        minimumDonation = _minimumDonation;\\n        balancerRouter = _balancerRouter;\\n        poolId = _poolId;\\n        assetsInPool = _assetsInPool;\\n        wethIndex = _wethIndex;\\n        olasIndex = _olasIndex;\\n        incentiveTokenAddress = _incentiveTokenAddress;\\n        epochToEndBlock[currentEpoch] = block.number + epochLength;\\n        permit2 = IPermit2(IBalancerRouter(_balancerRouter).getPermit2());\\n        currentEpoch = 1;\\n        epochToEndBlock[1] = block.number + epochLength;\\n        \\n    }\\n}\\n\",\"keccak256\":\"0xff5d76381701f007983ea0fbadc33d94f0089f9e998657554c82473b2647f390\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6101c0604081815234620003245781906200248f803803809162000024828662000329565b8439610100938491810103126200032457620000408262000363565b60209182840151906200005581860162000363565b90620000646060870162000363565b9460808701519460a0880151906200008460e060c08b01519a0162000363565b60016000908155909590926001600160a01b0392831680156200030c57600180546001600160a01b03198116831790915584167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a361018098670de0b6b3a76400008a526101a09a605a8c5285600455610160998a528360a05260c05260e0528b52610120998a52610140958652605a4301804311620002f85783805260088552858420558451631bbf2e2360e01b81529084908290600490829086165afa908115620002ee578391620002ad575b50166080526001600455865143019182431162000299579060088492600183525220555194612116968762000379883960805187818161130801526118f4015260a05187818161117d015281816119c50152611c68015260c05187818161123f01528181611a290152611cb4015260e0518781816111c4015281816118a00152611c160152518681816109e10152611c4001525185818161084b01526118cb01525184818161057b01528181610a3801528181610f0c015281816112830152818161158f015261185a0152518381816102dd01528181610616015281816109780152611ecd01525182818161030f0152818161054c0152818161091f01528181610e83015281816113ba015281816114d90152818161181201528181611e2b01526120b70152518181816105ef01528181610df40152818161149e01526116a90152f35b634e487b7160e01b82526011600452602482fd5b90508381813d8311620002e6575b620002c7818362000329565b81010312620002e257620002db9062000363565b3862000155565b8280fd5b503d620002bb565b85513d85823e3d90fd5b634e487b7160e01b84526011600452602484fd5b8651631e4fbdf760e01b815260048101869052602490fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200034d57604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620003245756fe60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c908162b3704414611439575080630b9663db1461133757806312261ee7146112f357806315a9c750146112b257806320263e871461126e5780633e0dc34e1461122a578063402914f51461120457806340add905146111e7578063415ad1d7146111ac57806349ec8b38146111685780634e71d92d14610da6578063533b3bfc14610d8957806357d775f8146107e95780636e0d8ccd14610d5d578063715018a614610d00578063736a83a1146107ca5780637667180814610816578063773f7a3a1461099b5780637941a06214610ce35780638515697a14610cc35780638598836214610c9c57806385de7ff614610a045780638c3e5a06146109c95780638da5cb5b146109a05780639453e78c1461099b57806396d8f4f3146109605780639971db2f14610944578063a5be619a146108fd578063b2cb3a9b146108d0578063b519fc1f1461086e578063b88140ae14610833578063b97dd9e214610816578063b99c13e0146107ee578063cfe8a73b146107e9578063d54ad2a1146107ca578063d56e3068146107ab578063d9d60b52146104f6578063e7bd55dc146104cf578063ed88c68e146102bf578063f2fde38b146102305763fdf2792403610011573461022c578160031936011261022c576020928291610209611455565b90358252600585528282206001600160a01b039091168252845220549051908152f35b8280fd5b503461022c57602036600319011261022c5761024a611470565b906102536114fc565b6001600160a01b039182169283156102a9575050600154826bffffffffffffffffffffffff60a01b821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b508260031936011261022c576102d3611642565b8054801561048c577f0000000000000000000000000000000000000000000000000000000000000000341061042f5761033561030d611574565b7f00000000000000000000000000000000000000000000000000000000000000001115611e6e565b808452602091600583528385203386528352838520546103ec578185526007835260588486205410156103b2575061036f34600254611665565b6002558352600581528183209033845252349082205534337f264f630d9efa0d07053a31163641d9fcc0adafc9d9e76f1c37c2ce3a558d2c528380a36001815580f35b835162461bcd60e51b8152908101839052601460248201527313585e08191bdb985d1bdc9cc81c995858da195960621b6044820152606490fd5b835162461bcd60e51b8152908101839052601a60248201527f416c726561647920646f6e6174656420746869732065706f63680000000000006044820152606490fd5b506020608492519162461bcd60e51b8352820152603160248201527f446f6e6174696f6e20616d6f756e74206973206c657373207468616e207468656044820152701036b4b734b6bab6903237b730ba34b7b760791b6064820152fd5b506020606492519162461bcd60e51b8352820152601860248201527f47616d6520686173206e6f7420737461727465642079657400000000000000006044820152fd5b503461022c57602036600319011261022c5760209282913581526007845220549051908152f35b5091346107a857602091826003193601126107a457610513611470565b9184549283825260088552828220548043101560001461079557825b60025460035486516370a0823160e01b8152308b820152929091907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038b866024817f000000000000000000000000000000000000000000000000000000000000000085165afa95861561078b578996610758575b508a895260058c528989209716808952968b5288882054958361071b5788975b8b61067657506101c09c5088995b836105e3611574565b10159b81519d8e9182527f00000000000000000000000000000000000000000000000000000000000000009101528c01527f000000000000000000000000000000000000000000000000000000000000000060608c015260808b015260a08a015260c089015260e088015261010087015261012086015261014085015261016084015215156101808301526101a0820152f35b99986000198c018c8111610707576101c09e5060078e828452600681528d8d852090855281528c84205415159d838552600582528d852090855281528c84205492845252848b83205491801580156106ff575b80156106f8575b156106de57505050986105da565b6106f29350906106ed91611d32565b611d45565b986105da565b508d6106d0565b5082156106c9565b50634e487b7160e01b815260118e52602490fd5b670de0b6b3a7640000808802908882041488151715610744578461073e91611d45565b976105cc565b50634e487b7160e01b895260118d52602489fd5b9095508b81813d8311610784575b6107708183611552565b81010312610780575194386105ac565b8880fd5b503d610766565b8a513d8b823e3d90fd5b61079f43826116df565b61052f565b5080fd5b80fd5b5050346107a457816003193601126107a4576020906002549051908152f35b5050346107a457816003193601126107a4576020906003549051908152f35b611486565b503461022c57602036600319011261022c57602092503561080d611574565b10159051908152f35b503461022c578260031936011261022c5760209250549051908152f35b5050346107a457816003193601126107a457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b83346107a857806003193601126107a8576108876114fc565b6108a06002546004546000526007602052604060002055565b6108a8611688565b807f45806e512b1f4f10e33e8b3cb64d1d11d998d8c554a95e0841fc1c701278bd5d8180a280f35b5050346107a45760203660031901126107a4576020906108f66108f1611470565b611fdf565b9051908152f35b5050346107a457816003193601126107a45760209061091a611574565b9051907f000000000000000000000000000000000000000000000000000000000000000011158152f35b5050346107a457816003193601126107a4576020905160588152f35b5050346107a457816003193601126107a457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b6114c1565b5050346107a457816003193601126107a45760015490516001600160a01b039091168152602090f35b5050346107a457816003193601126107a457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b508290346107a45760208060031936011261022c578135938415610c5b5780516370a0823160e01b815233848201526024957f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316939182818981885afa8015610c205782908890610c2a575b610a8492501015611d65565b8251636eb1769f60e11b8152338682015230888201528281604481885afa908115610c20579082918891610beb575b5010610bb257825190828201906323b872dd60e01b8252338984015230604484015260648301526064825260a082019167ffffffffffffffff9281811084821117610ba057855251969796889182919082885af13d15610b93573d918211610b815790610b3f91845191610b3085601f19601f8401160184611552565b82523d898584013e5b85611f7c565b8051918215159283610b68575b505050610b57578480f35b51635274afe760e01b815291820152fd5b610b789350820181019101611760565b15868080610b4c565b634e487b7160e01b8852604186528688fd5b610b3f9150606090610b39565b634e487b7160e01b8952604188528989fd5b825162461bcd60e51b8152808601839052601481890152734e6f7420656e6f75676820616c6c6f77616e636560601b6044820152606490fd5b809250848092503d8311610c19575b610c048183611552565b81010312610c155781905189610ab3565b8680fd5b503d610bfa565b84513d89823e3d90fd5b50508281813d8311610c54575b610c418183611552565b81010312610c155781610a849151610a78565b503d610c37565b5162461bcd60e51b815291820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260649150fd5b503461022c57602036600319011261022c5760209282913581526008845220549051908152f35b5091346107a85760203660031901126107a857506108f660209235611ecb565b5050346107a457816003193601126107a4576020906108f6612045565b83346107a857806003193601126107a857610d196114fc565b600180546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461022c57602036600319011261022c578160209360ff923581526009855220541690519015158152f35b5050346107a457816003193601126107a4576020906108f6612075565b503461022c578260031936011261022c57610dbf611642565b805491821561112c576000198301928311611119578284526020916008835281852054156110e25783855260088352818520547f00000000000000000000000000000000000000000000000000000000000000006001600160ff1b03811681036110cf5790610e319160011b90611665565b431161109857838552600683528185203386528352818520546110655783855260058352818520338652835281852054801561102f578486526007845282862054908115610fec57906106ed610ea8927f000000000000000000000000000000000000000000000000000000000000000090611d32565b938415610fb75784610f0793928592610eca83610ec3611574565b1015611d65565b88526006835283882033808a52908452848920839055845163a9059cbb60e01b815291820190815260208101929092529384918291604090910190565b0381887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610fae5750610f80575b5050610f5181600354611665565b600355337ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe8380a36001815580f35b81610f9f92903d10610fa7575b610f978183611552565b810190611760565b503880610f43565b503d610f8d565b513d86823e3d90fd5b5082606492519162461bcd60e51b8352820152601060248201526f4e6f7468696e6720746f20636c61696d60801b6044820152fd5b835162461bcd60e51b8152808401869052601760248201527f4e6f20646f6e6174696f6e7320746869732065706f63680000000000000000006044820152606490fd5b5082606492519162461bcd60e51b83528201526011602482015270139bc8191bdb985d1a5bdb88199bdd5b99607a1b6044820152fd5b82606492519162461bcd60e51b8352820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b6044820152fd5b82606492519162461bcd60e51b8352820152601360248201527210db185a5b481dda5b991bddc818db1bdcd959606a1b6044820152fd5b634e487b7160e01b875260118352602487fd5b82606492519162461bcd60e51b83528201526013602482015272115c1bd8da081b9bdd08195b991959081e595d606a1b6044820152fd5b634e487b7160e01b845260118252602484fd5b906020606492519162461bcd60e51b835282015260166024820152754e6f2065706f636820746f20636c61696d2066726f6d60501b6044820152fd5b5050346107a457816003193601126107a457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346107a457816003193601126107a457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5050346107a457816003193601126107a4576020906108f6611574565b5050346107a45760203660031901126107a4576020906108f6611225611470565b611db1565b5050346107a457816003193601126107a457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346107a457816003193601126107a457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461022c578160031936011261022c5760209282916112d0611455565b90358252600685528282206001600160a01b039091168252845220549051908152f35b5050346107a457816003193601126107a457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461022c578260031936011261022c5780548352600860205261136082842054431015611605565b611368611642565b8054908115611404575082526008602052812054611387904311611605565b61138f6117dc565b611397611c08565b6113b06002546004546000526007602052604060002055565b6113b8611688565b7f00000000000000000000000000000000000000000000000000000000000000007f45806e512b1f4f10e33e8b3cb64d1d11d998d8c554a95e0841fc1c701278bd5d8280a26001815580f35b606490602084519162461bcd60e51b8352820152600f60248201526e139bc8195c1bd8da081d1bc8195b99608a1b6044820152fd5b8490346107a457816003193601126107a4576020906002548152f35b602435906001600160a01b038216820361146b57565b600080fd5b600435906001600160a01b038216820361146b57565b3461146b57600036600319011261146b5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461146b57600036600319011261146b5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b6001546001600160a01b0316330361151057565b60405163118cdaa760e01b8152336004820152602490fd5b67ffffffffffffffff811161153c57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761153c57604052565b6040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156115f9576000916115cb575090565b906020823d82116115f1575b816115e460209383611552565b810103126107a857505190565b3d91506115d7565b6040513d6000823e3d90fd5b1561160c57565b60405162461bcd60e51b815260206004820152600e60248201526d22b837b1b4103737ba1037bb32b960911b6044820152606490fd5b600260005414611653576002600055565b604051633ee5aeb560e01b8152600490fd5b9190820180921161167257565b634e487b7160e01b600052601160045260246000fd5b600454600181018091116116725780600455600060025560006003556116ce7f000000000000000000000000000000000000000000000000000000000000000043611665565b906000526008602052604060002055565b9190820391821161167257565b67ffffffffffffffff811161153c5760051b60200190565b9061170e826116ec565b61171b6040519182611552565b828152809261172c601f19916116ec565b0190602036910137565b805182101561174a5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b9081602091031261146b5751801515810361146b5790565b6001600160a01b0390911681526080602080830182905283519183018290529260a0830192919084019060005b858282106117c85750505050600160408201526060818303910152600081520190565b8351865294850194909201916001016117a5565b600480546000908015611c03576000198101908111611bf0578082526020600781526040918284205415611bdb576118366003547f00000000000000000000000000000000000000000000000000000000000000006116df565b948515611bc45783516370a0823160e01b815230818301526001600160a01b0391907f00000000000000000000000000000000000000000000000000000000000000008316908581602481855afa908115611ace579089918991611b8f575b5010611b3d576118c47f0000000000000000000000000000000000000000000000000000000000000000611704565b92886118f07f000000000000000000000000000000000000000000000000000000000000000086611736565b52807f00000000000000000000000000000000000000000000000000000000000000001691888851888160448163095ea7b360e01b95868252898b830152806024830152875af18015611b3357611975928a928e92611b16575b508b519081526001600160a01b03871688820190815260208101929092529283918291604090910190565b03818d865af18015611b0c57611aef575b5062015180420192834211611adc57803b15611ad8579160848a92838d97969565ffffffffffff8d5197889687956387517c4560e01b87528b870152807f0000000000000000000000000000000000000000000000000000000000000000169b8c60248801521660448601521660648401525af18015611ace57611abb575b50813b15610c1557918691611a509383885180968195829463bf6ee3fd60e01b84527f0000000000000000000000000000000000000000000000000000000000000000908401611778565b03925af18015611ab157611a99575b508352600990528120805460ff191660011790557f1209e1080cd3a83981de8feb8856cd78637291d5929a806202ca79415225c4289080a2565b611aa38591611528565b611aad5738611a5f565b8380fd5b84513d87823e3d90fd5b611ac790979197611528565b9538611a05565b87513d8a823e3d90fd5b8980fd5b634e487b7160e01b8a526011855260248afd5b611b0590883d8a11610fa757610f978183611552565b5038611986565b89513d8c823e3d90fd5b611b2c90843d8611610fa757610f978183611552565b503861194a565b8a513d8d823e3d90fd5b855162461bcd60e51b8152808301869052602660248201527f4e6f7420656e6f75676820696e63656e746976652062616c616e636520746f20604482015265646f6e61746560d01b6064820152608490fd5b809250878092503d8311611bbd575b611ba88183611552565b81010312611bb95788905138611895565b8780fd5b503d611b9e565b508352600990529020805460ff1916600117905550565b50600990529020805460ff1916600117905550565b506011602492634e487b7160e01b835252fd5b505050565b4760008115611d2e57611c3a7f0000000000000000000000000000000000000000000000000000000000000000611704565b82611c657f000000000000000000000000000000000000000000000000000000000000000083611736565b527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b1561022c57611cdc8492849260405194858094819363bf6ee3fd60e01b83527f000000000000000000000000000000000000000000000000000000000000000060048401611778565b03925af18015611d2357907f6a105f72bec70df8ca4968fb6316bfbbcc1a488a733ebae3f6088e81652226f39291611d14575b5080a2565b611d1d90611528565b38611d0f565b6040513d84823e3d90fd5b5050565b8181029291811591840414171561167257565b8115611d4f570490565b634e487b7160e01b600052601260045260246000fd5b15611d6c57565b60405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f756768204f4c415320726577617264730000000000000000006044820152606490fd5b600454908115611e67576000198201918211611672576000908282526006602052604082209060018060a01b0316908183526020526040822054611e61578282526005602052604082209082526020526040812054918152600760205260408120549082158015611e59575b611e5357506106ed611e50927f000000000000000000000000000000000000000000000000000000000000000090611d32565b90565b91505090565b508115611e1d565b50905090565b5050600090565b15611e7557565b60405162461bcd60e51b815260206004820152602860248201527f4e6f7420656e6f756768204f4c4153207265776172647320746f20706c6179206044820152677468652067616d6560c01b6064820152608490fd5b7f00000000000000000000000000000000000000000000000000000000000000008110611f3757611efd61030d611574565b6002548015611f2957670de0b6b3a76400009182810292818404149015171561167257611e5091611d45565b5050670de0b6b3a764000090565b60405162461bcd60e51b815260206004820152601860248201527f4d696e696d756d20646f6e6174696f6e206e6f74206d657400000000000000006044820152606490fd5b90611fa35750805115611f9157805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580611fd6575b611fb4575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15611fac565b6004549060009182526005602052604082209060018060a01b03168252602052604081205490811561204057670de0b6b3a76400008083029283040361202c5750600254611e5091611d45565b634e487b7160e01b81526011600452602490fd5b905090565b600454801561206f5760005260086020526040600020548043101561206f57611e509043906116df565b50600090565b600454801561206f57600019810190811161167257600052600960205260ff604060002054166120db576007602052604060002054156120db57611e506003547f00000000000000000000000000000000000000000000000000000000000000006116df565b60009056fea26469706673582212206b4c6c38b8676caacab5c1e8cad510c5e059eeb374d5abc421e8968f9328839364736f6c63430008140033",
  "deployedBytecode": "0x60806040818152600480361015610021575b505050361561001f57600080fd5b005b600092833560e01c908162b3704414611439575080630b9663db1461133757806312261ee7146112f357806315a9c750146112b257806320263e871461126e5780633e0dc34e1461122a578063402914f51461120457806340add905146111e7578063415ad1d7146111ac57806349ec8b38146111685780634e71d92d14610da6578063533b3bfc14610d8957806357d775f8146107e95780636e0d8ccd14610d5d578063715018a614610d00578063736a83a1146107ca5780637667180814610816578063773f7a3a1461099b5780637941a06214610ce35780638515697a14610cc35780638598836214610c9c57806385de7ff614610a045780638c3e5a06146109c95780638da5cb5b146109a05780639453e78c1461099b57806396d8f4f3146109605780639971db2f14610944578063a5be619a146108fd578063b2cb3a9b146108d0578063b519fc1f1461086e578063b88140ae14610833578063b97dd9e214610816578063b99c13e0146107ee578063cfe8a73b146107e9578063d54ad2a1146107ca578063d56e3068146107ab578063d9d60b52146104f6578063e7bd55dc146104cf578063ed88c68e146102bf578063f2fde38b146102305763fdf2792403610011573461022c578160031936011261022c576020928291610209611455565b90358252600585528282206001600160a01b039091168252845220549051908152f35b8280fd5b503461022c57602036600319011261022c5761024a611470565b906102536114fc565b6001600160a01b039182169283156102a9575050600154826bffffffffffffffffffffffff60a01b821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b508260031936011261022c576102d3611642565b8054801561048c577f0000000000000000000000000000000000000000000000000000000000000000341061042f5761033561030d611574565b7f00000000000000000000000000000000000000000000000000000000000000001115611e6e565b808452602091600583528385203386528352838520546103ec578185526007835260588486205410156103b2575061036f34600254611665565b6002558352600581528183209033845252349082205534337f264f630d9efa0d07053a31163641d9fcc0adafc9d9e76f1c37c2ce3a558d2c528380a36001815580f35b835162461bcd60e51b8152908101839052601460248201527313585e08191bdb985d1bdc9cc81c995858da195960621b6044820152606490fd5b835162461bcd60e51b8152908101839052601a60248201527f416c726561647920646f6e6174656420746869732065706f63680000000000006044820152606490fd5b506020608492519162461bcd60e51b8352820152603160248201527f446f6e6174696f6e20616d6f756e74206973206c657373207468616e207468656044820152701036b4b734b6bab6903237b730ba34b7b760791b6064820152fd5b506020606492519162461bcd60e51b8352820152601860248201527f47616d6520686173206e6f7420737461727465642079657400000000000000006044820152fd5b503461022c57602036600319011261022c5760209282913581526007845220549051908152f35b5091346107a857602091826003193601126107a457610513611470565b9184549283825260088552828220548043101560001461079557825b60025460035486516370a0823160e01b8152308b820152929091907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038b866024817f000000000000000000000000000000000000000000000000000000000000000085165afa95861561078b578996610758575b508a895260058c528989209716808952968b5288882054958361071b5788975b8b61067657506101c09c5088995b836105e3611574565b10159b81519d8e9182527f00000000000000000000000000000000000000000000000000000000000000009101528c01527f000000000000000000000000000000000000000000000000000000000000000060608c015260808b015260a08a015260c089015260e088015261010087015261012086015261014085015261016084015215156101808301526101a0820152f35b99986000198c018c8111610707576101c09e5060078e828452600681528d8d852090855281528c84205415159d838552600582528d852090855281528c84205492845252848b83205491801580156106ff575b80156106f8575b156106de57505050986105da565b6106f29350906106ed91611d32565b611d45565b986105da565b508d6106d0565b5082156106c9565b50634e487b7160e01b815260118e52602490fd5b670de0b6b3a7640000808802908882041488151715610744578461073e91611d45565b976105cc565b50634e487b7160e01b895260118d52602489fd5b9095508b81813d8311610784575b6107708183611552565b81010312610780575194386105ac565b8880fd5b503d610766565b8a513d8b823e3d90fd5b61079f43826116df565b61052f565b5080fd5b80fd5b5050346107a457816003193601126107a4576020906002549051908152f35b5050346107a457816003193601126107a4576020906003549051908152f35b611486565b503461022c57602036600319011261022c57602092503561080d611574565b10159051908152f35b503461022c578260031936011261022c5760209250549051908152f35b5050346107a457816003193601126107a457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b83346107a857806003193601126107a8576108876114fc565b6108a06002546004546000526007602052604060002055565b6108a8611688565b807f45806e512b1f4f10e33e8b3cb64d1d11d998d8c554a95e0841fc1c701278bd5d8180a280f35b5050346107a45760203660031901126107a4576020906108f66108f1611470565b611fdf565b9051908152f35b5050346107a457816003193601126107a45760209061091a611574565b9051907f000000000000000000000000000000000000000000000000000000000000000011158152f35b5050346107a457816003193601126107a4576020905160588152f35b5050346107a457816003193601126107a457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b6114c1565b5050346107a457816003193601126107a45760015490516001600160a01b039091168152602090f35b5050346107a457816003193601126107a457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b508290346107a45760208060031936011261022c578135938415610c5b5780516370a0823160e01b815233848201526024957f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316939182818981885afa8015610c205782908890610c2a575b610a8492501015611d65565b8251636eb1769f60e11b8152338682015230888201528281604481885afa908115610c20579082918891610beb575b5010610bb257825190828201906323b872dd60e01b8252338984015230604484015260648301526064825260a082019167ffffffffffffffff9281811084821117610ba057855251969796889182919082885af13d15610b93573d918211610b815790610b3f91845191610b3085601f19601f8401160184611552565b82523d898584013e5b85611f7c565b8051918215159283610b68575b505050610b57578480f35b51635274afe760e01b815291820152fd5b610b789350820181019101611760565b15868080610b4c565b634e487b7160e01b8852604186528688fd5b610b3f9150606090610b39565b634e487b7160e01b8952604188528989fd5b825162461bcd60e51b8152808601839052601481890152734e6f7420656e6f75676820616c6c6f77616e636560601b6044820152606490fd5b809250848092503d8311610c19575b610c048183611552565b81010312610c155781905189610ab3565b8680fd5b503d610bfa565b84513d89823e3d90fd5b50508281813d8311610c54575b610c418183611552565b81010312610c155781610a849151610a78565b503d610c37565b5162461bcd60e51b815291820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260649150fd5b503461022c57602036600319011261022c5760209282913581526008845220549051908152f35b5091346107a85760203660031901126107a857506108f660209235611ecb565b5050346107a457816003193601126107a4576020906108f6612045565b83346107a857806003193601126107a857610d196114fc565b600180546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461022c57602036600319011261022c578160209360ff923581526009855220541690519015158152f35b5050346107a457816003193601126107a4576020906108f6612075565b503461022c578260031936011261022c57610dbf611642565b805491821561112c576000198301928311611119578284526020916008835281852054156110e25783855260088352818520547f00000000000000000000000000000000000000000000000000000000000000006001600160ff1b03811681036110cf5790610e319160011b90611665565b431161109857838552600683528185203386528352818520546110655783855260058352818520338652835281852054801561102f578486526007845282862054908115610fec57906106ed610ea8927f000000000000000000000000000000000000000000000000000000000000000090611d32565b938415610fb75784610f0793928592610eca83610ec3611574565b1015611d65565b88526006835283882033808a52908452848920839055845163a9059cbb60e01b815291820190815260208101929092529384918291604090910190565b0381887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610fae5750610f80575b5050610f5181600354611665565b600355337ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe8380a36001815580f35b81610f9f92903d10610fa7575b610f978183611552565b810190611760565b503880610f43565b503d610f8d565b513d86823e3d90fd5b5082606492519162461bcd60e51b8352820152601060248201526f4e6f7468696e6720746f20636c61696d60801b6044820152fd5b835162461bcd60e51b8152808401869052601760248201527f4e6f20646f6e6174696f6e7320746869732065706f63680000000000000000006044820152606490fd5b5082606492519162461bcd60e51b83528201526011602482015270139bc8191bdb985d1a5bdb88199bdd5b99607a1b6044820152fd5b82606492519162461bcd60e51b8352820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b6044820152fd5b82606492519162461bcd60e51b8352820152601360248201527210db185a5b481dda5b991bddc818db1bdcd959606a1b6044820152fd5b634e487b7160e01b875260118352602487fd5b82606492519162461bcd60e51b83528201526013602482015272115c1bd8da081b9bdd08195b991959081e595d606a1b6044820152fd5b634e487b7160e01b845260118252602484fd5b906020606492519162461bcd60e51b835282015260166024820152754e6f2065706f636820746f20636c61696d2066726f6d60501b6044820152fd5b5050346107a457816003193601126107a457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346107a457816003193601126107a457602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5050346107a457816003193601126107a4576020906108f6611574565b5050346107a45760203660031901126107a4576020906108f6611225611470565b611db1565b5050346107a457816003193601126107a457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346107a457816003193601126107a457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461022c578160031936011261022c5760209282916112d0611455565b90358252600685528282206001600160a01b039091168252845220549051908152f35b5050346107a457816003193601126107a457517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461022c578260031936011261022c5780548352600860205261136082842054431015611605565b611368611642565b8054908115611404575082526008602052812054611387904311611605565b61138f6117dc565b611397611c08565b6113b06002546004546000526007602052604060002055565b6113b8611688565b7f00000000000000000000000000000000000000000000000000000000000000007f45806e512b1f4f10e33e8b3cb64d1d11d998d8c554a95e0841fc1c701278bd5d8280a26001815580f35b606490602084519162461bcd60e51b8352820152600f60248201526e139bc8195c1bd8da081d1bc8195b99608a1b6044820152fd5b8490346107a457816003193601126107a4576020906002548152f35b602435906001600160a01b038216820361146b57565b600080fd5b600435906001600160a01b038216820361146b57565b3461146b57600036600319011261146b5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461146b57600036600319011261146b5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b6001546001600160a01b0316330361151057565b60405163118cdaa760e01b8152336004820152602490fd5b67ffffffffffffffff811161153c57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761153c57604052565b6040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156115f9576000916115cb575090565b906020823d82116115f1575b816115e460209383611552565b810103126107a857505190565b3d91506115d7565b6040513d6000823e3d90fd5b1561160c57565b60405162461bcd60e51b815260206004820152600e60248201526d22b837b1b4103737ba1037bb32b960911b6044820152606490fd5b600260005414611653576002600055565b604051633ee5aeb560e01b8152600490fd5b9190820180921161167257565b634e487b7160e01b600052601160045260246000fd5b600454600181018091116116725780600455600060025560006003556116ce7f000000000000000000000000000000000000000000000000000000000000000043611665565b906000526008602052604060002055565b9190820391821161167257565b67ffffffffffffffff811161153c5760051b60200190565b9061170e826116ec565b61171b6040519182611552565b828152809261172c601f19916116ec565b0190602036910137565b805182101561174a5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b9081602091031261146b5751801515810361146b5790565b6001600160a01b0390911681526080602080830182905283519183018290529260a0830192919084019060005b858282106117c85750505050600160408201526060818303910152600081520190565b8351865294850194909201916001016117a5565b600480546000908015611c03576000198101908111611bf0578082526020600781526040918284205415611bdb576118366003547f00000000000000000000000000000000000000000000000000000000000000006116df565b948515611bc45783516370a0823160e01b815230818301526001600160a01b0391907f00000000000000000000000000000000000000000000000000000000000000008316908581602481855afa908115611ace579089918991611b8f575b5010611b3d576118c47f0000000000000000000000000000000000000000000000000000000000000000611704565b92886118f07f000000000000000000000000000000000000000000000000000000000000000086611736565b52807f00000000000000000000000000000000000000000000000000000000000000001691888851888160448163095ea7b360e01b95868252898b830152806024830152875af18015611b3357611975928a928e92611b16575b508b519081526001600160a01b03871688820190815260208101929092529283918291604090910190565b03818d865af18015611b0c57611aef575b5062015180420192834211611adc57803b15611ad8579160848a92838d97969565ffffffffffff8d5197889687956387517c4560e01b87528b870152807f0000000000000000000000000000000000000000000000000000000000000000169b8c60248801521660448601521660648401525af18015611ace57611abb575b50813b15610c1557918691611a509383885180968195829463bf6ee3fd60e01b84527f0000000000000000000000000000000000000000000000000000000000000000908401611778565b03925af18015611ab157611a99575b508352600990528120805460ff191660011790557f1209e1080cd3a83981de8feb8856cd78637291d5929a806202ca79415225c4289080a2565b611aa38591611528565b611aad5738611a5f565b8380fd5b84513d87823e3d90fd5b611ac790979197611528565b9538611a05565b87513d8a823e3d90fd5b8980fd5b634e487b7160e01b8a526011855260248afd5b611b0590883d8a11610fa757610f978183611552565b5038611986565b89513d8c823e3d90fd5b611b2c90843d8611610fa757610f978183611552565b503861194a565b8a513d8d823e3d90fd5b855162461bcd60e51b8152808301869052602660248201527f4e6f7420656e6f75676820696e63656e746976652062616c616e636520746f20604482015265646f6e61746560d01b6064820152608490fd5b809250878092503d8311611bbd575b611ba88183611552565b81010312611bb95788905138611895565b8780fd5b503d611b9e565b508352600990529020805460ff1916600117905550565b50600990529020805460ff1916600117905550565b506011602492634e487b7160e01b835252fd5b505050565b4760008115611d2e57611c3a7f0000000000000000000000000000000000000000000000000000000000000000611704565b82611c657f000000000000000000000000000000000000000000000000000000000000000083611736565b527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b1561022c57611cdc8492849260405194858094819363bf6ee3fd60e01b83527f000000000000000000000000000000000000000000000000000000000000000060048401611778565b03925af18015611d2357907f6a105f72bec70df8ca4968fb6316bfbbcc1a488a733ebae3f6088e81652226f39291611d14575b5080a2565b611d1d90611528565b38611d0f565b6040513d84823e3d90fd5b5050565b8181029291811591840414171561167257565b8115611d4f570490565b634e487b7160e01b600052601260045260246000fd5b15611d6c57565b60405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f756768204f4c415320726577617264730000000000000000006044820152606490fd5b600454908115611e67576000198201918211611672576000908282526006602052604082209060018060a01b0316908183526020526040822054611e61578282526005602052604082209082526020526040812054918152600760205260408120549082158015611e59575b611e5357506106ed611e50927f000000000000000000000000000000000000000000000000000000000000000090611d32565b90565b91505090565b508115611e1d565b50905090565b5050600090565b15611e7557565b60405162461bcd60e51b815260206004820152602860248201527f4e6f7420656e6f756768204f4c4153207265776172647320746f20706c6179206044820152677468652067616d6560c01b6064820152608490fd5b7f00000000000000000000000000000000000000000000000000000000000000008110611f3757611efd61030d611574565b6002548015611f2957670de0b6b3a76400009182810292818404149015171561167257611e5091611d45565b5050670de0b6b3a764000090565b60405162461bcd60e51b815260206004820152601860248201527f4d696e696d756d20646f6e6174696f6e206e6f74206d657400000000000000006044820152606490fd5b90611fa35750805115611f9157805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580611fd6575b611fb4575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15611fac565b6004549060009182526005602052604082209060018060a01b03168252602052604081205490811561204057670de0b6b3a76400008083029283040361202c5750600254611e5091611d45565b634e487b7160e01b81526011600452602490fd5b905090565b600454801561206f5760005260086020526040600020548043101561206f57611e509043906116df565b50600090565b600454801561206f57600019810190811161167257600052600960205260ff604060002054166120db576007602052604060002054156120db57611e506003547f00000000000000000000000000000000000000000000000000000000000000006116df565b60009056fea26469706673582212206b4c6c38b8676caacab5c1e8cad510c5e059eeb374d5abc421e8968f9328839364736f6c63430008140033",
  "devdoc": {
    "errors": {
      "AddressEmptyCode(address)": [
        {
          "details": "There's no code at `target` (it is not a contract)."
        }
      ],
      "AddressInsufficientBalance(address)": [
        {
          "details": "The ETH balance of the account is not enough to perform the operation."
        }
      ],
      "FailedInnerCall()": [
        {
          "details": "A call to an address target failed. The target may have reverted."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ],
      "SafeERC20FailedOperation(address)": [
        {
          "details": "An operation with an ERC20 token failed."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 845,
        "contract": "contracts/Staking.sol:DerolasStaking",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 8,
        "contract": "contracts/Staking.sol:DerolasStaking",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 972,
        "contract": "contracts/Staking.sol:DerolasStaking",
        "label": "totalDonated",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 974,
        "contract": "contracts/Staking.sol:DerolasStaking",
        "label": "totalClaimed",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 977,
        "contract": "contracts/Staking.sol:DerolasStaking",
        "label": "currentEpoch",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 986,
        "contract": "contracts/Staking.sol:DerolasStaking",
        "label": "epochToDonations",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 992,
        "contract": "contracts/Staking.sol:DerolasStaking",
        "label": "epochToClaimed",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 996,
        "contract": "contracts/Staking.sol:DerolasStaking",
        "label": "epochToTotalDonated",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 1000,
        "contract": "contracts/Staking.sol:DerolasStaking",
        "label": "epochToEndBlock",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 1004,
        "contract": "contracts/Staking.sol:DerolasStaking",
        "label": "epochDonated",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}