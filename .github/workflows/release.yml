# Publish package on main branch if it's tagged with 'v*'

name: release & publish workflow

# Controls when the action will run.
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    tags:
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "release"
  release:
    name: Create Release
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        python-versions: ["3.11"]

    permissions:
        contents: write
    steps:
      - name: Get version from tag
        id: tag_name
        run: |
          echo ::set-output name=current_version::${GITHUB_REF#refs/tags/v}
        shell: bash

      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ matrix.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: ~/my-custom-path
          installer-parallel: true

      - name: Update Changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        id: changelog
        with:
            token: ${{ secrets.GH_TOKEN }}
            issues: true
            issuesWoLabels: true
            pullRequests: true
            prWoLabels: true
            unreleased: true
            addSections: '{"documentation":{"prefix":"**Documentation:**","labels":["documentation"]}}'

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update Changelog for PR
          file_pattern: CHANGELOG.md
          branch: main
          push_options: '--force'

      - name: Install Project
        run: |
            make install

      - name: Push packages To Registry
        run: |
            make hashes

      - name: create github release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          body: ${{ steps.changelog.outputs.changelog }}
          files: packages/packages.json
          draft: false
          prerelease: false

  build-docker:
    # Docker
    env:
      IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO_NAME }}
      RELEASE_VERSION: 0.1.36
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            tag_suffix: amd64
          - platform: linux/arm64
            tag_suffix: arm64

    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push ${{ matrix.platform }} image
        run: |
          docker buildx build \
            --platform=${{ matrix.platform }} \
            --tag $IMAGE_NAME:$RELEASE_VERSION-${{ matrix.tag_suffix }} \
            --push \
            .
  create-manifest:
    needs: build-docker
    runs-on: ubuntu-22.04
    env:
      IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO_NAME }}
      RELEASE_VERSION: 0.1.36
    steps:
      - uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create and push multi-arch manifest
        run: |
          docker buildx imagetools create \
            --tag $IMAGE_NAME:$RELEASE_VERSION \
            --tag $IMAGE_NAME:latest \
            $IMAGE_NAME:$RELEASE_VERSION-amd64 \
            $IMAGE_NAME:$RELEASE_VERSION-arm64
